Here’s a detailed and effective **Replit AI prompt** you can use with Ghostwriter or any GPT-based code assistant in Replit to **analyze your entire app for automatic refreshing, infinite loops, and unintended redirects**:

---

### 🧠 Replit Prompt: Debug App Refreshing or Looping Issues

> 🔧 **Prompt for Replit AI (Ghostwriter):**
> Analyze the entire project for **any code that causes refreshing, infinite re-renders, or redirect loops**. Look for:

---

### 🔍 Areas to Inspect:

1. **Global Scripts or Page Mount Behavior**:

   * Any `window.location.reload()`, `location.href =`, or `router.push()` calls
   * `setInterval`, `setTimeout`, or recurring navigation logic

2. **React Lifecycle or `useEffect()` Problems**:

   * `useEffect()` blocks that run redirects or reloads on mount
   * Missing dependency arrays that cause re-running on every render
   * Examples to flag:

     ```js
     useEffect(() => {
       router.push('/');
     }, []);
     ```

3. **Authentication or Routing Guards**:

   * Redirect logic like `if (!user) router.push('/')` that runs before auth is confirmed
   * Guard clauses without proper checks for `loading`, `userLoaded`, or `authChecked`

4. **Infinite Re-render Traps**:

   * State updates that cause component loops
   * `setState()` or `setXXX()` being triggered unconditionally
   * Props passed in ways that cause recursion

5. **Third-Party Scripts**:

   * Any tracking or plugin script that forces refresh
   * Replit-only dev or preview utilities that interfere

---

### ✅ What to Output:

* Show a list of files and lines where issues exist
* Suggest corrections (e.g., debounce routing, confirm auth before redirecting)
* Highlight which logic is safe to remove or refactor

---

### 🧯 Goal:

Ensure that the app:

* **Does not reload or refresh automatically**
* **Does not redirect unless explicitly triggered by a valid action**
* **Maintains stable rendering behavior without state or route loops**

---

Let me know your stack (e.g. React + Firebase, Next.js, etc.) and I can tailor the prompt even more specifically!
